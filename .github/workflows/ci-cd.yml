name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        env:
          PIP_CACHE_DIR: ${{ runner.temp }}/pip-cache

  train_model:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        env:
          PIP_CACHE_DIR: ${{ runner.temp }}/pip-cache

      - name: Train the model
        run: python train_model.py

  run_tests:
    runs-on: ubuntu-latest
    needs: train_model
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        env:
          PIP_CACHE_DIR: ${{ runner.temp }}/pip-cache

      - name: Run tests
        run: pytest tests/ --disable-warnings
        continue-on-error: false  # Fail the job if tests fail

  package_and_upload:
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        env:
          PIP_CACHE_DIR: ${{ runner.temp }}/pip-cache

      - name: Create package
        run: python setup.py sdist bdist_wheel  # Create a package using setuptools

      - name: Extract package name and version
        id: extract_version
        run: |
          PACKAGE_NAME=$(python setup.py --name)
          PACKAGE_VERSION=$(python setup.py --version)
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}  # Dynamic S3 bucket name from GitHub Secrets
        run: |
          aws s3 cp dist/ s3://$S3_BUCKET_NAME/$PACKAGE_NAME-$PACKAGE_VERSION/ --recursive
